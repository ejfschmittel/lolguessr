{"version":3,"sources":["components/HeaderBar.js","components/GameMenu.js","utils/riot.js","components/ChampionInputBox.js","components/GuessChampionByAbilityGame.js","components/LolIcon.js","components/GuessTheOddOneOut.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderBar","onBackToMenu","className","onClick","GAMES","GUESS_CHAMPION_BY_ABILITY","key","title","image","GUESS_ABILITY_NAME","GUESS_THE_ODD_ONE_OUT","GameMenuTile","game","src","GameMenu","onGameSelect","Object","keys","map","gameKey","riotChache","IMAGE_URL","process","DATA_PATHS","CHAMPIONS","getData","dataPath","a","data","getFromChache","console","log","loadData","saveToChache","path","url","fetch","response","json","split","obj","i","length","reduce","prev","getAllChampions","champions","id","getRandomChampion","allChampions","getRandomArrayItem","getChampionData","championID","championData","getRandomChampionAbillity","getRandomChampionData","randomChampion","abilities","getChampionAbilityList","randomAbility","champion","ability","getOddOneOutData","primaryChampion","secondaryChampion","primaryChampionAbilities","secondaryChampionAbilities","value","odd","randomInt","getRandomInt","randomChampionID","spells","passive","idx","num","Math","floor","random","array","getImageUrl","group","full","ChampionInput","list","props","useState","championsList","setChampionsList","useEffect","loadChampionsList","Fragment","hintsOrder","emptyActiveHints","championFirstLetter","abilityKey","abilityName","solved","solvedByUser","LolIcon","GuessChampionByAbilityNameGame","hintCounter","setHintCounter","setIsLoading","text","setText","hintText","setHintText","setData","activeHints","setActiveHints","loadNew","updateHintText","hasActiveHints","getHintsText","forEach","solvedAdd","abilityKeyHint","abilityNameHint","endPart","charAt","placeholder","onChange","e","target","toLowerCase","nextHint","AbilityIcons","showKey","showName","name","GuessTheOddOneOut","gameData","setGameData","App","setGame","Container","useMemo","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAceA,EAVG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,yBAAQC,UAAU,aAAlB,UACI,qBAAKC,QAASF,EAAd,kBACA,oBAAIC,UAAU,oBAAd,mBACA,+CCLCE,G,MAAQ,CACjBC,0BAA2B,CACvBC,IAAK,sBACLC,MAAO,gCACPC,MAAO,IAEXC,mBAAoB,CAChBH,IAAK,eACLC,MAAO,yBACPC,MAAO,IAEXE,sBAAuB,CACnBJ,IAAK,cACLC,MAAO,wBACPC,MAAO,MAeTG,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMT,EAAa,EAAbA,QACzB,OACI,sBAAKD,UAAU,YAAYC,QAAS,kBAAMA,EAAQS,EAAKN,MAAvD,UACI,qBAAKO,IAAI,GAAGX,UAAU,qBACtB,qBAAKA,UAAU,mBAAf,SAAmCU,EAAKL,YAKrCO,EAnBE,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACf,OACI,qBAAKb,UAAU,YAAf,SACKc,OAAOC,KAAKb,GAAOc,KAAI,SAACZ,GACrB,OAAO,cAAC,EAAD,CAAcM,KAAMR,EAAME,GAAMH,QAASY,EAAcI,QAASb,GAAUA,S,oDCtB3Fc,EAAa,GAMbC,EAAYC,wCAILC,EAAa,CACtBC,UAAW,iBAIFC,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDAEfC,EAAOC,EAAcH,GAFN,uBAIfI,QAAQC,IAAI,mBAJG,SAKFC,EAASN,GALP,OAKfE,EALe,OAMfK,EAAaP,EAAUE,GANR,gCAQZA,GARY,2CAAH,sDAePI,GAJOhB,OAAOC,KAAKM,GAAYL,KAAI,SAAAZ,GAAG,OAAIiB,EAAWjB,MAI7C,uCAAG,WAAO4B,GAAP,mBAAAP,EAAA,6DACdQ,EA1BOb,gDA0BUY,EADH,SAEGE,MAAMD,GAFT,cAEdE,EAFc,gBAGDA,EAASC,OAHR,cAGdA,EAHc,yBAIbA,GAJa,2CAAH,uDAQRL,EAAe,SAACP,EAAUE,GAInC,IAHA,IAAMX,EAAOS,EAASa,MAAM,KAExBC,EAAMpB,EACFqB,EAAI,EAAGA,EAAIxB,EAAKyB,OAAO,EAAGD,IAAI,CAClC,IAAMnC,EAAMW,EAAKwB,GACXnC,KAAOkC,IACTA,EAAIlC,GAAO,IAEfkC,EAAMA,EAAIlC,GAEdkC,EAAIvB,EAAKA,EAAKyB,OAAO,IAAMd,GAGzBC,EAAgB,SAACH,GAGnB,OAFaA,EAASa,MAAM,KAEhBI,QAAO,SAACC,EAAMtC,GACtB,OAAIsC,GACDtC,KAAOsC,EAAaA,EAAKtC,GADX,OAGnBc,IAMOyB,EAAe,uCAAG,4BAAAlB,EAAA,sEACHF,EAAQF,EAAWC,WADhB,cACrBsB,EADqB,yBAEpB9B,OAAOC,KAAK6B,EAAUlB,MAAMV,KAAI,SAAAZ,GAAG,OAAIwC,EAAUlB,KAAKtB,GAAKyC,OAFvC,2CAAH,qDAKfC,EAAiB,uCAAG,4BAAArB,EAAA,sEACFkB,IADE,cACvBI,EADuB,yBAEtBC,EAAmBD,IAFG,2CAAH,qDAKjBE,EAAe,uCAAG,WAAOC,GAAP,eAAAzB,EAAA,sEACAF,EAAQ,YAAD,OAAa2B,EAAb,UADP,cACrBC,EADqB,yBAEpBA,GAFoB,2CAAH,sDAMfC,EAAyB,uCAAG,gCAAA3B,EAAA,sEACR4B,IADQ,cAC/BC,EAD+B,OAE/BC,EAAYC,EAAuBF,GACnCG,EAAgBT,EAAmBO,GAHJ,kBAI9B,CAACG,SAAUJ,EAAgBK,QAASF,IAJN,2CAAH,qDAQzBG,EAAgB,uCAAG,oCAAAnC,EAAA,sEACE4B,IADF,OACtBQ,EADsB,OAExBC,EAAoB,KAFI,uBAGET,IAHF,OAGxBS,EAHwB,iBAGkCD,EAAgBhB,IAAMiB,EAAkBjB,GAH1E,8BAMtBkB,EAA2BP,EAAuBK,GAClDG,EAA6BR,EAAuBM,GAE1DC,EAAyB/C,KAAI,SAAAiD,GAAK,kCAASA,GAAT,IAAgBC,KAAK,OACjDC,EAAYC,EAAaL,EAAyBvB,QACxDuB,EAAyBI,GAAzB,2BAA0CH,EAA2BG,IAArE,IAAiFD,KAAK,IAX1D,kBAarB,CAACL,kBAAiBC,oBAAmBP,UAAWQ,IAb3B,4CAAH,qDAiBhBV,EAAqB,uCAAG,8BAAA5B,EAAA,sEACFqB,IADE,cAC3BuB,EAD2B,gBAENpB,EAAgBoB,GAFV,cAE3BlB,EAF2B,yBAG1BA,EAAazB,KAAK2C,IAHQ,2CAAH,qDAO5Bb,EAAyB,SAAC9B,GAC5B,IAAMX,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,WAC9BwC,EAAS,sBAAO7B,EAAK4C,QAAZ,CAAoB5C,EAAK6C,UAItC,OAHAhB,EAAYA,EAAUvC,KAAI,SAACiD,EAAOO,GAAR,mBAAC,eAAoBP,GAArB,IAA4B7D,IAAKW,EAAKyD,QAChE5C,QAAQC,IAAI,iBACZD,QAAQC,IAAI0B,GACLA,GAGLa,EAAe,SAACK,GAAD,OAASC,KAAKC,MAAMD,KAAKE,SAAWH,IAEnDzB,EAAqB,SAAC6B,GAAD,OAAWA,EAAMH,KAAKC,MAAMD,KAAKE,SAAWC,EAAMrC,UAOhEsC,EAAc,SAACxE,GACxB,MAAM,GAAN,OAAUa,EAAV,YAAuBb,EAAMyE,MAA7B,YAAsCzE,EAAM0E,OC7GjCC,EAvBO,SAAC,GAA2B,IAAzBpC,EAAwB,EAAxBA,GAAIqC,EAAoB,EAApBA,KAASC,EAAW,+BAEHC,mBAAS,IAFN,mBAEtCC,EAFsC,KAEvBC,EAFuB,KAI7CC,qBAAU,WAAOC,MAAsB,IAEvC,IAAMA,EAAiB,uCAAG,4BAAA/D,EAAA,sEACEkB,IADF,OAChBC,EADgB,OAEtB0C,EAAiB1C,GAFK,2CAAH,qDAKvB,OACI,eAAC,IAAM6C,SAAP,WACI,mCAAOP,KAAMA,EAAMrC,GAAIA,GAAQsC,IAC/B,0BAAUtC,GAAIqC,EAAd,SACKG,EAAcrE,KAAI,SAAAkC,GACf,OAAO,wBAAQe,MAAOf,GAAiBL,EAAKK,YCG1DwC,G,MAAa,CAAC,aAAa,cAAc,wBAGzCC,EAAmB,CACrBC,qBAAqB,EACrBC,YAAY,EACZC,aAAa,EACbC,QAAQ,EACRC,cAAc,GAgJZC,EAAU,SAAC,GAAuB,IAAtB3F,EAAqB,EAArBA,MAAU6E,EAAW,yBAC7BlD,EAAM3B,EAAQwE,EAAYxE,GAAS,KACzC,OAAO,iCAAKK,IAAKsB,GAASkD,KAGfe,EAlJwB,WAAO,IAAD,IACHd,mBAAS,GADN,mBAClCe,EADkC,KACrBC,EADqB,OAEPhB,oBAAS,GAFF,mBAEvBiB,GAFuB,aAGjBjB,mBAAS,IAHQ,mBAGlCkB,EAHkC,KAG5BC,EAH4B,OAKTnB,mBAAS,QALA,mBAKlCoB,EALkC,KAKxBC,EALwB,OAOjBrB,mBAAS,CAC7BlC,WAAY,KACZQ,SAAU,KACVC,QAAS,OAV4B,mBAOlCjC,EAPkC,KAO5BgF,EAP4B,OAcHtB,mBAASO,GAdN,mBAclCgB,EAdkC,KAcrBC,EAdqB,KAgBzCrB,qBAAU,WACNsB,MACF,IAIFtB,qBAAU,WACNuB,MACF,CAACH,IAGH,IAAMG,EAAiB,WACnB,IAAMR,EAAOS,IAAmBC,IAAiB,KACjDP,EAAYH,IAGVS,EAAiB,WACnB,IAAIA,GAAiB,EAIrB,OAHAjG,OAAOC,KAAK4F,GAAaM,SAAQ,SAAA7G,GAC1BuG,EAAYvG,KAAM2G,GAAiB,MAEnCA,GAGLC,EAAe,WACjBpF,QAAQC,IAAI8E,GACZ,IAAMO,EAAYP,EAAYX,aAAe,YAAc,GACrDmB,EAAiBR,EAAYd,YAAcc,EAAYZ,OAASrE,EAAKiC,QAAL,IAAsB,GACtFyD,EAAkBT,EAAYb,aAAea,EAAYZ,OAAvC,oBAA6DrE,EAAKiC,QAAL,KAA7D,MAAwF,GAC1G0D,EAAUV,EAAYZ,OAASrE,EAAKgC,SAASb,GAAK8D,EAAYf,oBAAZ,UAAqClE,EAAKgC,SAASb,GAAGyE,OAAO,GAA7D,OAAuE,kBAC/H,MAAM,GAAN,OAAUJ,EAAV,wBAAmCE,EAAnC,mBAA6DD,EAA7D,uBAA0FE,IA4BxFR,EAAO,uCAAG,4BAAApF,EAAA,6DACZG,QAAQC,IAAI,YACZwE,GAAa,GAFD,SAGOjD,IAHP,OAGN1B,EAHM,OAIZE,QAAQC,IAAIH,GACZ+E,EAAY,MACZL,EAAe,GACfQ,EAAejB,GACfU,GAAa,GACbK,EAAQhF,GATI,4CAAH,qDAyBb,OACI,8BACI,gCAGI,4EACA,qBAAK1B,UAAU,KAOf,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,CACIM,MAAK,OAAEoB,QAAF,IAAEA,GAAF,UAAEA,EAAMiC,eAAR,aAAE,EAAerD,MACtBN,UAAU,OAIlB,qBAAKA,UAAU,WAAf,SACKwG,IAKL,8BACC,cAAC,EAAD,CAAgB3D,GAAG,OAAOqC,KAAK,YAAYqC,YAAY,cAAcC,SAtCjE,SAACC,GAAO,IACdxD,EAASwD,EAAEC,OAAXzD,MAEP,GADAsC,EAAQtC,GACLA,EAAM0D,eAAiBjG,EAAKgC,SAASb,GAAG8E,cAAc,CACrD,IAAMR,EAAiBzF,EAAKiC,QAAL,IACjB2C,EAAI,uCAAmCa,EAAnC,uBAAgEzF,EAAKgC,SAASb,GAA9E,KACV4D,EAAYH,KAgCkFrC,MAAOqC,MAIjG,sBAAKtG,UAAU,UAAf,UACI,wBAAQC,QAjFJ,WAChB,IAAM2H,EAAWlC,EAAWS,GAE5BS,EAAe,2BACRD,GADO,kBAETiB,GAAW,KAEhBxB,EAAeD,EAAY,IA0Ef,kBACA,wBAAQlG,QAxEH,WACjB2G,EAAe,2BACRD,GADO,IAEVZ,QAAQ,MAqEA,mBACA,wBAAQ9F,QAlEJ,WAChB4G,IACAN,EAAQ,KAgEI,2BChKLN,EALC,SAAC,GAAuB,IAAtB3F,EAAqB,EAArBA,MAAU6E,EAAW,yBAC7BlD,EAAM3B,EAAQwE,EAAYxE,GAAS,KACzC,OAAO,iCAAKK,IAAKsB,GAASkD,KCiExB0C,G,MAAe,SAAC,GAA2C,IAA1ClE,EAAyC,EAAzCA,QAAyC,EAAhCmE,QAAgC,EAAvBC,SAAuB,EAAb9H,QAC/C,OACI,sBAAKD,UAAU,eAAf,UACI,8BACI,cAAC,EAAD,CAASM,MAAOqD,EAAQrD,UAE5B,8BAAMqD,EAAQvD,MACd,8BAAMuD,EAAQqE,YAMXC,EAhEW,WAAO,IAAD,IACM7C,oBAAS,GADf,mBACViB,GADU,aAEIjB,mBAAS,MAFb,mBAErB8C,EAFqB,KAEXC,EAFW,KAI5B5C,qBAAU,WAENsB,MACF,IAEF,IAAMA,EAAO,uCAAG,4BAAApF,EAAA,6DACZ4E,GAAa,GADD,SAKOzC,IALP,OAKNlC,EALM,OAMZyG,EAAYzG,GACZ2E,GAAa,GAPD,2CAAH,qDAWb,OACI,8BACI,gCAEI,oDAGA,qBAAKrG,UAAU,iBAAf,SACI,cAAC,EAAD,CAASM,MAAK,OAAE4H,QAAF,IAAEA,GAAF,UAAEA,EAAUrE,uBAAZ,aAAE,EAA2BvD,UAG/C,8EAAwD,OAAR4H,QAAQ,IAARA,OAAA,EAAAA,EAAUrE,iBAAkBqE,EAASrE,gBAAgBhB,GAAK,aAA1G,OAGA,qBAAK7C,UAAU,oBAAf,UACa,OAARkI,QAAQ,IAARA,OAAA,EAAAA,EAAU3E,YAAa2E,EAAS3E,UAAUvC,KAAI,SAAA2C,GAC3C,OAAO,cAAC,EAAD,CAAcA,QAASA,SAItC,sBAAK3D,UAAU,UAAf,UACI,0CACA,2CACA,mD,MCFLoI,MA9Cf,WAAgB,IAAD,EAEWhD,mBAAS,MAFpB,mBAEN1E,EAFM,KAEA2H,EAFA,KAMPxH,EAAe,SAACI,GACpBW,QAAQC,IAAI,kBACZD,QAAQC,IAAIZ,GACZoH,EAAQpH,IAQJqH,EAAYC,mBAAQ,WAGxB,OAFA3G,QAAQC,IAAInB,GACZkB,QAAQC,IAAI3B,EAAMC,2BACXO,GAEL,KAAKR,EAAMC,0BAA0BC,IACnC,OAAO,cAAC,EAAD,IACT,KAAKF,EAAMM,sBAAsBJ,IAC7B,OAAO,cAAC,EAAD,IACX,QACE,OAAO,cAAC,EAAD,CAAUS,aAAcA,OAElC,CAACH,IAIJ,OAFAkB,QAAQC,IAAIyG,GAGV,qBAAKtI,UAAU,MAAf,SACE,sBAAKwI,MAAM,gBAAX,UACE,cAAC,EAAD,CAAYzI,aAxBG,WACnBsI,EAAQ,SAwBJ,qBAAKrI,UAAU,iBAAf,SACGsI,UCxCIG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fb079ac0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport \"../styles/components/HeaderBar.styles.scss\"\r\n\r\nconst HeaderBar = ({onBackToMenu}) => {\r\n    return ( \r\n        <header className=\"header-bar\">\r\n            <div onClick={onBackToMenu}>Menu</div>\r\n            <h1 className=\"header-bar__title\">Title</h1>\r\n            <div>Settings</div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderBar;","import React from 'react'\r\n\r\nimport \"../styles/components/GameMenu.styles.scss\"\r\n\r\nexport const GAMES = {\r\n    GUESS_CHAMPION_BY_ABILITY: {\r\n        key: \"champion_by_ability\",\r\n        title: \"Guess the Champion By Ability\",\r\n        image: \"\",\r\n    },\r\n    GUESS_ABILITY_NAME: {\r\n        key: \"ability_name\",\r\n        title: \"Guess the Ability Name\",\r\n        image: \"\",\r\n    },\r\n    GUESS_THE_ODD_ONE_OUT: {\r\n        key: \"odd_one_out\",\r\n        title: \"Guess the odd one out\",\r\n        image: \"\",\r\n    }\r\n}\r\n\r\n\r\nconst GameMenu = ({onGameSelect}) => {\r\n    return (\r\n        <div className=\"game-menu\">\r\n            {Object.keys(GAMES).map((key) => {\r\n                return <GameMenuTile game={GAMES[key]} onClick={onGameSelect} gameKey={key} key={key}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GameMenuTile = ({game, onClick}) => {\r\n    return (\r\n        <div className=\"menu-tile\" onClick={() => onClick(game.key)}>\r\n            <img src=\"\" className=\"menu-tile__image\" />\r\n            <div className=\"menu-tile__title\">{game.title}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameMenu","// directly import \r\n\r\n// load json file\r\n\r\n\r\nconst riotChache = {}\r\n\r\n\r\nconst DRAGON_TAIL_VERSION = \"/dragontail-9.3.1/9.3.1\"\r\n\r\nconst DATA_URL = process.env.PUBLIC_URL + DRAGON_TAIL_VERSION + \"/data/en_US/\"\r\nconst IMAGE_URL = process.env.PUBLIC_URL + DRAGON_TAIL_VERSION + \"/img\"\r\n\r\n\r\n\r\nexport const DATA_PATHS = {\r\n    CHAMPIONS: \"champion.json\",\r\n}\r\n\r\n\r\nexport const getData = async (dataPath) => {\r\n    //if(!isValidDataPath(dataPath)) throw new Error(`${dataPath} is not a valid data path.`)\r\n    let data = getFromChache(dataPath)\r\n    if(!data){\r\n        console.log(\"loading data...\")\r\n        data = await loadData(dataPath)\r\n        saveToChache(dataPath, data)\r\n    }\r\n    return data; \r\n}\r\n\r\nconst VALID_PATHS = Object.keys(DATA_PATHS).map(key => DATA_PATHS[key])\r\n//const isValidDataPath = (dataPath) => VALID_PATHS.includes(dataPath)\r\n\r\n\r\nexport const loadData = async (path) => {\r\n    const url = DATA_URL + path;\r\n    const response = await fetch(url)\r\n    const json = await response.json();\r\n    return json;\r\n}\r\n\r\n\r\nexport const saveToChache = (dataPath, data) => {\r\n    const keys = dataPath.split(\"/\")\r\n \r\n    let obj = riotChache;\r\n    for(let i = 0; i < keys.length-1; i++){\r\n        const key = keys[i]\r\n        if (!(key in obj)){\r\n            obj[key] = {}\r\n        } \r\n        obj = obj[key]\r\n    }\r\n    obj[keys[keys.length-1]] = data;\r\n}\r\n\r\nconst getFromChache = (dataPath) => {\r\n    const keys = dataPath.split(\"/\")\r\n  \r\n    return keys.reduce((prev, key) => {\r\n        if(!prev) return null;\r\n        if(key in prev) return prev[key]\r\n        return null;\r\n    },riotChache)\r\n} \r\n\r\n\r\n\r\n\r\nexport const getAllChampions = async () => {\r\n    const champions = await getData(DATA_PATHS.CHAMPIONS);\r\n    return Object.keys(champions.data).map(key => champions.data[key].id)\r\n}\r\n\r\nexport const getRandomChampion = async () => {\r\n    const allChampions = await getAllChampions()\r\n    return getRandomArrayItem(allChampions);\r\n}\r\n\r\nexport const getChampionData = async (championID) => {\r\n    const championData = await getData(`champion/${championID}.json`)\r\n    return championData\r\n}\r\n\r\n\r\nexport const getRandomChampionAbillity = async () => {\r\n    const randomChampion = await getRandomChampionData()\r\n    const abilities = getChampionAbilityList(randomChampion)\r\n    const randomAbility = getRandomArrayItem(abilities)\r\n    return {champion: randomChampion, ability: randomAbility}\r\n}\r\n\r\n\r\nexport const getOddOneOutData = async () => {\r\n    const primaryChampion = await getRandomChampionData()\r\n    let secondaryChampion = null;\r\n    do{ secondaryChampion = await getRandomChampionData(); }while(primaryChampion.id == secondaryChampion.id);\r\n\r\n  \r\n    const primaryChampionAbilities = getChampionAbilityList(primaryChampion)\r\n    const secondaryChampionAbilities = getChampionAbilityList(secondaryChampion)\r\n\r\n    primaryChampionAbilities.map(value => ({...value, odd: false}))\r\n    const randomInt = getRandomInt(primaryChampionAbilities.length)\r\n    primaryChampionAbilities[randomInt] = {...secondaryChampionAbilities[randomInt], odd: true}\r\n    \r\n    return {primaryChampion, secondaryChampion, abilities: primaryChampionAbilities}\r\n}\r\n\r\n\r\nexport const getRandomChampionData = async () => {\r\n    const randomChampionID = await getRandomChampion();\r\n    const championData = await getChampionData(randomChampionID)\r\n    return championData.data[randomChampionID]\r\n}\r\n\r\n\r\nconst getChampionAbilityList = (data) => {\r\n    const keys = [\"Q\", \"W\", \"E\", \"R\", \"Passive\"]\r\n    let abilities = [...data.spells, data.passive]\r\n    abilities = abilities.map((value, idx) => ({...value, key: keys[idx]}))\r\n    console.log(\"get abilities\")\r\n    console.log(abilities)\r\n    return abilities;\r\n}\r\n\r\nconst getRandomInt = (num) => Math.floor(Math.random() * num)\r\n\r\nconst getRandomArrayItem = (array) => array[Math.floor(Math.random() * array.length)]  \r\n\r\nexport const getSpellIconPath = (abilityName) => {\r\n    return `${IMAGE_URL}/spell/${abilityName}.png`;\r\n}\r\n\r\n\r\nexport const getImageUrl = (image) => {\r\n    return `${IMAGE_URL}/${image.group}/${image.full}`;\r\n}\r\n\r\nexport const getPassiveIconPath = (champion) => {\r\n\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {getAllChampions} from \"../utils/riot\"\r\n\r\n\r\n\r\nconst ChampionInput = ({ id, list, ...props}) => {\r\n\r\n    const [championsList, setChampionsList] = useState([])\r\n\r\n    useEffect(() => {loadChampionsList();},[])\r\n\r\n    const loadChampionsList = async () => {\r\n        const champions = await getAllChampions();\r\n        setChampionsList(champions)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input list={list} id={id} {...props}/>\r\n            <datalist id={list}>\r\n                {championsList.map(championID => {\r\n                    return <option value={championID} key={id + championID}/>\r\n                })}\r\n            </datalist>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ChampionInput;","\r\nimport React, {useState, useEffect} from 'react'\r\nimport ChampionsInput from \"./ChampionInputBox\"\r\nimport {getRandomChampionAbillity, getImageUrl} from \"../utils/riot\"\r\n\r\n\r\nimport \"../styles/components/GuessChampionByAbilityGame.styles.scss\";\r\n/*\r\n\r\n- get random champion. \r\n- Get random ability \r\n\r\n    - solve\r\n    - hint\r\n    - next buttons\r\n\r\n    What to guess\r\n\r\n    - champion\r\n    - ability name\r\n\r\n*/\r\n\r\n\r\nconst hintsOrder = [\"abilityKey\",\"abilityName\",\"championFirstLetter\"]\r\n\r\n\r\nconst emptyActiveHints = {\r\n    championFirstLetter: false,\r\n    abilityKey: false,\r\n    abilityName: false,\r\n    solved: false,\r\n    solvedByUser: false,\r\n}\r\n\r\nconst GuessChampionByAbilityNameGame = () => {\r\n    const [hintCounter, setHintCounter] = useState(0)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const [hintText, setHintText] = useState(\"test\")\r\n\r\n    const [data, setData] = useState({\r\n        championID: null,\r\n        champion: null,\r\n        ability: null,\r\n    })\r\n\r\n\r\n    const [activeHints, setActiveHints] = useState(emptyActiveHints)\r\n    \r\n    useEffect(() => {\r\n        loadNew()\r\n    },[])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        updateHintText()\r\n    },[activeHints])\r\n   \r\n\r\n    const updateHintText = () => {\r\n        const text = hasActiveHints() ? getHintsText() : null;\r\n        setHintText(text)\r\n    }\r\n\r\n    const hasActiveHints = () => {\r\n        let hasActiveHints = false;\r\n        Object.keys(activeHints).forEach(key => {\r\n            if(activeHints[key]) hasActiveHints = true;\r\n        })\r\n        return hasActiveHints\r\n    }\r\n\r\n    const getHintsText = () => {\r\n        console.log(activeHints)\r\n        const solvedAdd = activeHints.solvedByUser ? \"Correct: \" : \"\";\r\n        const abilityKeyHint = activeHints.abilityKey || activeHints.solved ? data.ability[\"key\"] : \"\";\r\n        const abilityNameHint = activeHints.abilityName || activeHints.solved ? `, called \"${data.ability[\"name\"]}\",` : \"\";\r\n        const endPart = activeHints.solved ? data.champion.id : activeHints.championFirstLetter ? `${data.champion.id.charAt(0)}...` : \"which Champion?\"\r\n        return `${solvedAdd} This ability${abilityNameHint} is the ${abilityKeyHint} ability of ${endPart}`;\r\n    }\r\n\r\n\r\n    const onHintPress = () => {\r\n        const nextHint = hintsOrder[hintCounter]\r\n        \r\n        setActiveHints({\r\n            ...activeHints,\r\n            [nextHint]: true,\r\n        })\r\n        setHintCounter(hintCounter+1)\r\n    }\r\n\r\n    const onSolvePress = () => {\r\n        setActiveHints({\r\n            ...activeHints,\r\n            solved: true,\r\n        })\r\n    }\r\n\r\n    const onNextClick = () => {\r\n        loadNew()\r\n        setText(\"\")\r\n    }\r\n\r\n\r\n\r\n    const loadNew = async () => {\r\n        console.log(\"load new\")\r\n        setIsLoading(true)\r\n        const data = await getRandomChampionAbillity();\r\n        console.log(data)\r\n        setHintText(null)\r\n        setHintCounter(0)\r\n        setActiveHints(emptyActiveHints)\r\n        setIsLoading(false)\r\n        setData(data)\r\n      \r\n    }\r\n\r\n\r\n    const onChange = (e) => {\r\n        const {value} = e.target;\r\n        setText(value)\r\n        if(value.toLowerCase() == data.champion.id.toLowerCase()){\r\n            const abilityKeyHint = data.ability[\"key\"]\r\n            const text = `Correct: This ability is the ${abilityKeyHint} ability of ${data.champion.id}.`;\r\n            setHintText(text)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n\r\n\r\n                <h2>Guess the Champion this ability belongs to</h2>\r\n                <div className=\"\">\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"icon icon--hero\">\r\n                    <LolIcon \r\n                        image={data?.ability?.image} \r\n                        className=\"\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"hintText\">\r\n                    {hintText}\r\n                </div>\r\n             \r\n\r\n\r\n                <div>\r\n                 <ChampionsInput id=\"test\" list=\"champions\" placeholder=\"Champion...\" onChange={onChange} value={text}/>\r\n                </div>\r\n                \r\n\r\n                <div className=\"buttons\">\r\n                    <button onClick={onHintPress}>Hint</button>\r\n                    <button onClick={onSolvePress}>Solve</button>\r\n                    <button onClick={onNextClick}>Next</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst LolIcon = ({image, ...props}) => {\r\n    const url = image ? getImageUrl(image) : null;\r\n    return <img src={url} {...props}/>\r\n}\r\n\r\nexport default GuessChampionByAbilityNameGame","import React from 'react'\r\nimport { getImageUrl} from \"../utils/riot\"\r\n\r\nconst LolIcon = ({image, ...props}) => {\r\n    const url = image ? getImageUrl(image) : null;\r\n    return <img src={url} {...props}/>\r\n}\r\n\r\nexport default LolIcon;","\r\n\r\nimport React, {useState, useEffect} from 'react'\r\nimport ChampionsInput from \"./ChampionInputBox\"\r\nimport LoLIcon from \"./LolIcon\"\r\nimport {getRandomChampionAbillity, getImageUrl, getOddOneOutData} from \"../utils/riot\"\r\nimport LolIcon from './LolIcon'\r\n\r\nimport \"../styles/components/OddOneOutGame.styles.scss\";\r\n\r\n/*\r\n    odd one out \r\n\r\n    - by name\r\n    - by icon \r\n    - both??\r\n\r\n*/\r\n\r\nconst GuessTheOddOneOut = () => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [gameData, setGameData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        // load \r\n        loadNew()\r\n    },[])\r\n\r\n    const loadNew = async () => {\r\n        setIsLoading(true)\r\n        // get two random champion that are not the same\r\n        // get abilities \r\n        // get random abiliteis\r\n        const data = await getOddOneOutData();\r\n        setGameData(data)\r\n        setIsLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n\r\n                <h2>Guess the Odd one </h2>\r\n\r\n\r\n                <div className=\"champion-image\">\r\n                    <LolIcon image={gameData?.primaryChampion?.image} />\r\n                </div>\r\n\r\n                <p>Which of these abilities does not belong to {gameData?.primaryChampion ? gameData.primaryChampion.id : \"...Loading\"}?</p>\r\n\r\n\r\n                <div className=\"abilities-display\">\r\n                    {gameData?.abilities && gameData.abilities.map(ability => {\r\n                        return <AbilityIcons ability={ability} />\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"buttons\">\r\n                    <button >Hint</button>\r\n                    <button >Solve</button>\r\n                    <button >Next</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst AbilityIcons = ({ability, showKey, showName, onClick}) => {\r\n    return (\r\n        <div className=\"ability-icon\" >\r\n            <div>\r\n                <LolIcon image={ability.image} />\r\n            </div>\r\n            <div>{ability.key}</div>\r\n            <div>{ability.name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GuessTheOddOneOut","import React, {useState, useMemo, useEffect} from 'react'\n\nimport HeaderBar from \"./components/HeaderBar\"\nimport GameMenu, {GAMES} from \"./components/GameMenu\"\nimport GuessChampionByAbilityNameGame from \"./components/GuessChampionByAbilityGame\"\nimport GuessTheOddOneOut from \"./components/GuessTheOddOneOut\"\nimport {getData, DATA_PATHS, getChampionData, getRandomChampion, getRandomChampionAbillity} from \"./utils/riot\"\n\nimport \"./styles/main.scss\"\n\n\n\n\n\nfunction App() {\n\n  const [game, setGame] = useState(null)\n\n\n\n  const onGameSelect = (gameKey) => {\n    console.log(\"on game select\")\n    console.log(gameKey)\n    setGame(gameKey)\n  }\n\n  const onBackToMenu = () => {\n    setGame(null)\n  }\n\n\n  const Container = useMemo(() => {\n    console.log(game)\n    console.log(GAMES.GUESS_CHAMPION_BY_ABILITY)\n    switch(game){\n\n      case GAMES.GUESS_CHAMPION_BY_ABILITY.key:\n        return <GuessChampionByAbilityNameGame />\n      case GAMES.GUESS_THE_ODD_ONE_OUT.key:\n          return <GuessTheOddOneOut />\n      default: \n        return <GameMenu onGameSelect={onGameSelect} />\n    }\n  }, [game])\n\n  console.log(Container)\n\n  return (\n    <div className=\"App\">\n      <div class=\"app-container\">\n        <HeaderBar  onBackToMenu={onBackToMenu}/>\n        <div className=\"game-container\">\n          {Container}\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}